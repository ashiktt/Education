// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Enum to define user roles
enum UserRole {
  ADMIN
  USER
}

enum ServiceRecommendation {
  RECOMMENDED
  POPULAR
  NEW
}

// User model representing both admins and students
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  // reviews   Review[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TeamMember {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  img  String
  name String
  role String
}

model Testimonial {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  image  String
  name   String
  role   String
  text   String
  rating Float
}

model Service {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  authorName     String
  bannerImg      String
  courseName     String
  authorImg      String
  totalAdmission String
  semesterCost   String
  universityName String
  tag            String
  duration       String
  level          String
  semester       String
  description    String
  recommendation ServiceRecommendation @default(NEW)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Appointment {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String
  phoneNumber String
  coursesid   String
  complite    Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
